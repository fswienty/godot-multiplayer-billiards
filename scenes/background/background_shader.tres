[gd_resource type="VisualShader" load_steps=31 format=2]

[ext_resource path="res://assets/images/balls/background.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVectorCompose" id=5]

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, -0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeColorFunc" id=10]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorOp" id=11]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorConstant" id=12]
constant = Color( 0.532336, 0.532336, 0.532336, 1 )

[sub_resource type="VisualShaderNodeColorOp" id=13]
output_port_for_preview = 0
operator = 4

[sub_resource type="VisualShaderNodeTexture" id=1]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorCompose" id=16]

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 0.167544 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeScalarOp" id=21]
default_input_values = [ 0, 0.0, 1, 0.345213 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 0.0, 1, 0.267254 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=24]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=25]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]

[sub_resource type="VisualShaderNodeVectorCompose" id=26]

[sub_resource type="VisualShaderNodeVectorCompose" id=27]

[sub_resource type="VisualShaderNodeScalarConstant" id=28]
constant = 3.59

[sub_resource type="VisualShaderNodeScalarConstant" id=29]
constant = 0.169

[sub_resource type="VisualShaderNodeVectorFunc" id=30]
function = 28

[sub_resource type="VisualShaderNodeScalarConstant" id=31]
constant = 16.0

[sub_resource type="VisualShaderNodeScalarConstant" id=32]
constant = -9.0

[sub_resource type="VisualShaderNodeScalarOp" id=33]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=34]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=35]
constant = 1.0

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 4, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=8]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=9]

[resource]
code = "shader_type canvas_item;
render_mode blend_disabled, unshaded;

uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// Scalar:47
	float n_out47p0 = 1.000000;

// Scalar:43
	float n_out43p0 = 16.000000;

// ScalarOp:45
	float n_out45p0 = n_out47p0 * n_out43p0;

// Scalar:44
	float n_out44p0 = -9.000000;

// ScalarOp:46
	float n_out46p0 = n_out47p0 * n_out44p0;

// VectorCompose:9
	float n_in9p2 = 0.00000;
	vec3 n_out9p0 = vec3(n_out45p0, n_out46p0, n_in9p2);

// VectorOp:6
	vec3 n_out6p0 = n_out3p0 * n_out9p0;

// Input:7
	float n_out7p0 = TIME;

// ScalarOp:12
	float n_in12p1 = -0.20000;
	float n_out12p0 = n_out7p0 * n_in12p1;

// VectorCompose:11
	vec3 n_out11p0 = vec3(n_out12p0, n_out12p0, n_out12p0);

// VectorOp:8
	vec3 n_out8p0 = n_out6p0 + n_out11p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out8p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ColorFunc:14
	vec3 n_out14p0;
	{
		vec3 c = n_out2p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out14p0 = vec3(max2, max2, max2);
	}

// Color:16
	vec3 n_out16p0 = vec3(0.532336, 0.532336, 0.532336);
	float n_out16p1 = 1.000000;

// ColorOp:15
	vec3 n_out15p0 = vec3(1.0) - (vec3(1.0) - n_out14p0) * (vec3(1.0) - n_out16p0);

// Input:22
	float n_out22p0 = TIME;

// ScalarOp:27
	float n_in27p1 = 0.16754;
	float n_out27p0 = n_out22p0 * n_in27p1;

// ScalarOp:30
	float n_in30p1 = 0.34521;
	float n_out30p0 = n_out22p0 * n_in30p1;

// ScalarOp:34
	float n_in34p1 = 0.26725;
	float n_out34p0 = n_out22p0 * n_in34p1;

// VectorCompose:21
	vec3 n_out21p0 = vec3(n_out27p0, n_out30p0, n_out34p0);

// VectorFunc:42
	vec3 n_out42p0 = sin(n_out21p0);

// Scalar:40
	float n_out40p0 = 3.590000;

// VectorCompose:38
	vec3 n_out38p0 = vec3(n_out40p0, n_out40p0, n_out40p0);

// VectorOp:37
	vec3 n_out37p0 = n_out42p0 + n_out38p0;

// Scalar:41
	float n_out41p0 = 0.169000;

// VectorCompose:39
	vec3 n_out39p0 = vec3(n_out41p0, n_out41p0, n_out41p0);

// VectorOp:36
	vec3 n_out36p0 = n_out37p0 * n_out39p0;

// ColorOp:17
	vec3 n_out17p0;
	{
		float base = n_out15p0.x;
		float blend = n_out36p0.x;
		if (base < 0.5) {
			n_out17p0.x = 2.0 * base * blend;
		} else {
			n_out17p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out15p0.y;
		float blend = n_out36p0.y;
		if (base < 0.5) {
			n_out17p0.y = 2.0 * base * blend;
		} else {
			n_out17p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out15p0.z;
		float blend = n_out36p0.z;
		if (base < 0.5) {
			n_out17p0.z = 2.0 * base * blend;
		} else {
			n_out17p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}

// Output:0
	COLOR.rgb = n_out17p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -188.201, 10.7219 )
mode = 1
modes/blend = 5
flags/light_only = false
flags/unshaded = true
nodes/fragment/0/position = Vector2( 1440, 180 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 460, 160 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -200, -40 )
nodes/fragment/6/node = SubResource( 3 )
nodes/fragment/6/position = Vector2( 40, 100 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( -360, 360 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( 220, 240 )
nodes/fragment/9/node = SubResource( 9 )
nodes/fragment/9/position = Vector2( -220, 140 )
nodes/fragment/11/node = SubResource( 5 )
nodes/fragment/11/position = Vector2( 0, 340 )
nodes/fragment/12/node = SubResource( 6 )
nodes/fragment/12/position = Vector2( -180, 340 )
nodes/fragment/14/node = SubResource( 10 )
nodes/fragment/14/position = Vector2( 720, 140 )
nodes/fragment/15/node = SubResource( 11 )
nodes/fragment/15/position = Vector2( 1000, 140 )
nodes/fragment/16/node = SubResource( 12 )
nodes/fragment/16/position = Vector2( 800, 360 )
nodes/fragment/17/node = SubResource( 13 )
nodes/fragment/17/position = Vector2( 1220, 160 )
nodes/fragment/21/node = SubResource( 16 )
nodes/fragment/21/position = Vector2( 400, 600 )
nodes/fragment/22/node = SubResource( 17 )
nodes/fragment/22/position = Vector2( -40, 620 )
nodes/fragment/27/node = SubResource( 19 )
nodes/fragment/27/position = Vector2( 200, 480 )
nodes/fragment/30/node = SubResource( 21 )
nodes/fragment/30/position = Vector2( 200, 600 )
nodes/fragment/34/node = SubResource( 23 )
nodes/fragment/34/position = Vector2( 200, 720 )
nodes/fragment/36/node = SubResource( 24 )
nodes/fragment/36/position = Vector2( 1020, 580 )
nodes/fragment/37/node = SubResource( 25 )
nodes/fragment/37/position = Vector2( 840, 580 )
nodes/fragment/38/node = SubResource( 26 )
nodes/fragment/38/position = Vector2( 640, 700 )
nodes/fragment/39/node = SubResource( 27 )
nodes/fragment/39/position = Vector2( 640, 800 )
nodes/fragment/40/node = SubResource( 28 )
nodes/fragment/40/position = Vector2( 440, 720 )
nodes/fragment/41/node = SubResource( 29 )
nodes/fragment/41/position = Vector2( 440, 820 )
nodes/fragment/42/node = SubResource( 30 )
nodes/fragment/42/position = Vector2( 620, 600 )
nodes/fragment/43/node = SubResource( 31 )
nodes/fragment/43/position = Vector2( -660, 140 )
nodes/fragment/44/node = SubResource( 32 )
nodes/fragment/44/position = Vector2( -660, 240 )
nodes/fragment/45/node = SubResource( 33 )
nodes/fragment/45/position = Vector2( -400, 100 )
nodes/fragment/46/node = SubResource( 34 )
nodes/fragment/46/position = Vector2( -400, 200 )
nodes/fragment/47/node = SubResource( 35 )
nodes/fragment/47/position = Vector2( -660, 60 )
nodes/fragment/connections = PoolIntArray( 11, 0, 8, 1, 7, 0, 12, 0, 12, 0, 11, 0, 12, 0, 11, 1, 12, 0, 11, 2, 2, 0, 14, 0, 14, 0, 15, 0, 22, 0, 27, 0, 22, 0, 30, 0, 22, 0, 34, 0, 38, 0, 37, 1, 39, 0, 36, 1, 41, 0, 39, 0, 41, 0, 39, 1, 41, 0, 39, 2, 40, 0, 38, 0, 40, 0, 38, 1, 40, 0, 38, 2, 21, 0, 42, 0, 42, 0, 37, 0, 27, 0, 21, 0, 30, 0, 21, 1, 34, 0, 21, 2, 37, 0, 36, 0, 43, 0, 45, 1, 44, 0, 46, 1, 46, 0, 9, 1, 45, 0, 9, 0, 47, 0, 45, 0, 47, 0, 46, 0, 3, 0, 6, 0, 9, 0, 6, 1, 17, 0, 0, 0, 8, 0, 2, 0, 6, 0, 8, 0, 15, 0, 17, 0, 36, 0, 17, 1, 16, 0, 15, 1, 11, 0, 8, 1, 7, 0, 12, 0, 12, 0, 11, 0, 12, 0, 11, 1, 12, 0, 11, 2, 2, 0, 14, 0, 14, 0, 15, 0, 22, 0, 27, 0, 22, 0, 30, 0, 22, 0, 34, 0, 38, 0, 37, 1, 39, 0, 36, 1, 41, 0, 39, 0, 41, 0, 39, 1, 41, 0, 39, 2, 40, 0, 38, 0, 40, 0, 38, 1, 40, 0, 38, 2, 21, 0, 42, 0, 42, 0, 37, 0, 27, 0, 21, 0, 30, 0, 21, 1, 34, 0, 21, 2, 37, 0, 36, 0, 43, 0, 45, 1, 44, 0, 46, 1, 46, 0, 9, 1, 45, 0, 9, 0, 47, 0, 45, 0, 47, 0, 46, 0, 3, 0, 6, 0, 9, 0, 6, 1, 17, 0, 0, 0, 8, 0, 2, 0, 6, 0, 8, 0, 15, 0, 17, 0, 36, 0, 17, 1, 16, 0, 15, 1, 11, 0, 8, 1, 7, 0, 12, 0, 12, 0, 11, 0, 12, 0, 11, 1, 12, 0, 11, 2, 2, 0, 14, 0, 14, 0, 15, 0, 22, 0, 27, 0, 22, 0, 30, 0, 22, 0, 34, 0, 38, 0, 37, 1, 39, 0, 36, 1, 41, 0, 39, 0, 41, 0, 39, 1, 41, 0, 39, 2, 40, 0, 38, 0, 40, 0, 38, 1, 40, 0, 38, 2, 21, 0, 42, 0, 42, 0, 37, 0, 27, 0, 21, 0, 30, 0, 21, 1, 34, 0, 21, 2, 37, 0, 36, 0, 43, 0, 45, 1, 44, 0, 46, 1, 46, 0, 9, 1, 45, 0, 9, 0, 47, 0, 45, 0, 47, 0, 46, 0, 3, 0, 6, 0, 9, 0, 6, 1, 17, 0, 0, 0, 8, 0, 2, 0, 6, 0, 8, 0, 15, 0, 17, 0, 36, 0, 17, 1, 16, 0, 15, 1, 11, 0, 8, 1, 7, 0, 12, 0, 12, 0, 11, 0, 12, 0, 11, 1, 12, 0, 11, 2, 2, 0, 14, 0, 14, 0, 15, 0, 22, 0, 27, 0, 22, 0, 30, 0, 22, 0, 34, 0, 38, 0, 37, 1, 39, 0, 36, 1, 41, 0, 39, 0, 41, 0, 39, 1, 41, 0, 39, 2, 40, 0, 38, 0, 40, 0, 38, 1, 40, 0, 38, 2, 21, 0, 42, 0, 42, 0, 37, 0, 27, 0, 21, 0, 30, 0, 21, 1, 34, 0, 21, 2, 37, 0, 36, 0, 43, 0, 45, 1, 44, 0, 46, 1, 46, 0, 9, 1, 45, 0, 9, 0, 47, 0, 45, 0, 47, 0, 46, 0, 3, 0, 6, 0, 9, 0, 6, 1, 17, 0, 0, 0, 8, 0, 2, 0, 6, 0, 8, 0, 15, 0, 17, 0, 36, 0, 17, 1, 16, 0, 15, 1, 11, 0, 8, 1, 7, 0, 12, 0, 12, 0, 11, 0, 12, 0, 11, 1, 12, 0, 11, 2, 2, 0, 14, 0, 14, 0, 15, 0, 22, 0, 27, 0, 22, 0, 30, 0, 22, 0, 34, 0, 38, 0, 37, 1, 39, 0, 36, 1, 41, 0, 39, 0, 41, 0, 39, 1, 41, 0, 39, 2, 40, 0, 38, 0, 40, 0, 38, 1, 40, 0, 38, 2, 21, 0, 42, 0, 42, 0, 37, 0, 27, 0, 21, 0, 30, 0, 21, 1, 34, 0, 21, 2, 37, 0, 36, 0, 43, 0, 45, 1, 44, 0, 46, 1, 46, 0, 9, 1, 45, 0, 9, 0, 47, 0, 45, 0, 47, 0, 46, 0, 3, 0, 6, 0, 9, 0, 6, 1, 17, 0, 0, 0, 8, 0, 2, 0, 6, 0, 8, 0, 15, 0, 17, 0, 36, 0, 17, 1, 16, 0, 15, 1 )
